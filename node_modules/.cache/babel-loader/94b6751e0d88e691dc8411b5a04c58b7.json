{"ast":null,"code":"var _jsxFileName = \"C:\\\\fyp-final-project\\\\fyp-react-complete-ecommerce\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserScreen = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch(); // useSelector is to grab what we want from the state\n\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate; // make request here upon component load\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      history.push('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [successUpdate, dispatch, history, user, userId]); // Dependencies, on change they fire off useEffect)\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isadmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserScreen, \"0BS4SkBeh9KJVd26AG40JZaWMos=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserScreen;\nexport default UserScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","submitHandler","e","preventDefault","target","value","checked"],"sources":["C:/fyp-final-project/fyp-react-complete-ecommerce/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserScreen = ({ match, history }) => {\r\n\tconst userId = match.params.id\r\n\r\n\tconst [name, setName] = useState('')\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [isAdmin, setIsAdmin] = useState(false)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userDetails = useSelector((state) => state.userDetails)\r\n\tconst { loading, error, user } = userDetails\r\n\r\n\tconst userUpdate = useSelector((state) => state.userUpdate)\r\n\tconst {\r\n\t\tloading: loadingUpdate,\r\n\t\terror: errorUpdate,\r\n\t\tsuccess: successUpdate,\r\n\t} = userUpdate\r\n\r\n\t// make request here upon component load\r\n\tuseEffect(() => {\r\n\t\tif (successUpdate) {\r\n\t\t\tdispatch({ type: USER_UPDATE_RESET })\r\n\t\t\thistory.push('/admin/userlist')\r\n\t\t} else {\r\n\t\t\tif (!user.name || user._id !== userId) {\r\n\t\t\t\tdispatch(getUserDetails(userId))\r\n\t\t\t} else {\r\n\t\t\t\tsetName(user.name)\r\n\t\t\t\tsetEmail(user.email)\r\n\t\t\t\tsetIsAdmin(user.isAdmin)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [successUpdate, dispatch, history, user, userId]) // Dependencies, on change they fire off useEffect)\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tdispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Link to='/admin/userlist' className='btn btn-light my-3'>\r\n\t\t\t\tGo Back\r\n\t\t\t</Link>\r\n\t\t\t<FormContainer>\r\n\t\t\t\t<h1>Edit User</h1>\r\n\t\t\t\t{loadingUpdate && <Loader />}\r\n\t\t\t\t{errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\t\t\t\t{/* On error, display message/error\r\n            When loading, display Loading... */}\r\n\t\t\t\t{loading ? (\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t) : error ? (\r\n\t\t\t\t\t<Message variant='danger'>{error}</Message>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t\t\t{/* Name */}\r\n\t\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t{/* Email */}\r\n\t\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t{/* isAdmin */}\r\n\t\t\t\t\t\t<Form.Group controlId='isadmin'>\r\n\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tlabel='Is Admin'\r\n\t\t\t\t\t\t\t\tchecked={isAdmin}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setIsAdmin(e.target.checked)}\r\n\t\t\t\t\t\t\t></Form.Check>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t{/* Button */}\r\n\t\t\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</FormContainer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default UserScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}