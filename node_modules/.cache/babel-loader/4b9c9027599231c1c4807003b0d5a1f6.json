{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants'; // productListReducer for all products\n\nexport const productListReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    products: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // Requests product list\n    // products is an empty array because its still loading\n    // loading will NOT be done yet, so true\n    case PRODUCT_LIST_REQUEST:\n      return {\n        loading: true,\n        products: []\n      };\n    // On success\n    // products will contain data as a payload\n    // loading will be done, so false\n\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page\n      };\n    // On fail\n    // products will contain the error as a payload\n    // loading will be done, so false\n\n    case PRODUCT_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    // In any other case, just return the state\n\n    default:\n      return state;\n  }\n}; // productDetailsReducer for a single product\n\nexport const productDetailsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    product: {\n      reviews: []\n    }\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // Requests a product\n    // product is an empty object because its still loading\n    // reviews is an empty array because its still loading\n    // loading will NOT be done yet, so true\n    // add contents of state using a spread operator (...)\n    case PRODUCT_DETAILS_REQUEST:\n      return {\n        loading: true,\n        ...state\n      };\n    // On success\n    // product will contain data as a payload\n    // loading will be done, so false\n\n    case PRODUCT_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        product: action.payload\n      };\n    // On fail\n    // product will contain the error as a payload\n    // loading will be done, so false\n\n    case PRODUCT_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    // In any other case, just return the state\n\n    default:\n      return state;\n  }\n}; // productDeleteReducer for admin users\n\nexport const productDeleteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case PRODUCT_DELETE_REQUEST:\n      return {\n        loading: true\n      };\n    // On success\n    // loading will be done, so false\n\n    case PRODUCT_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n\n    case PRODUCT_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    // In any other case, just return the state\n\n    default:\n      return state;\n  }\n}; // productCreateReducer for admin users\n\nexport const productCreateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case PRODUCT_CREATE_REQUEST:\n      return {\n        loading: true\n      };\n    // On success\n    // loading will be done, so false\n\n    case PRODUCT_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        product: action.payload\n      };\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n\n    case PRODUCT_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case PRODUCT_CREATE_RESET:\n      return {};\n    // In any other case, just return the state\n\n    default:\n      return state;\n  }\n}; // productUpdateReducer for admin users\n\nexport const productUpdateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    product: {}\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case PRODUCT_UPDATE_REQUEST:\n      return {\n        loading: true\n      };\n    // On success\n    // loading will be done, so false\n\n    case PRODUCT_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        product: action.payload\n      };\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n\n    case PRODUCT_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case PRODUCT_UPDATE_RESET:\n      return {\n        product: {}\n      };\n    // In any other case, just return the state\n\n    default:\n      return state;\n  }\n}; // productReviewCreateReducer for logged in users\n\nexport const productReviewCreateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return {\n        loading: true\n      };\n    // On success\n    // loading will be done, so false\n\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {};\n    // In any other case, just return the state\n\n    default:\n      return state;\n  }\n}; // productTopRatedReducer\n\nexport const productTopRatedReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    products: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // loading will NOT be done yet, so true\n    case PRODUCT_TOP_REQUEST:\n      return {\n        loading: true,\n        products: []\n      };\n    // On success\n    // loading will be done, so false\n\n    case PRODUCT_TOP_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload\n      };\n    // On fail\n    // the error will contain the payload\n    // loading will be done, so false\n\n    case PRODUCT_TOP_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    // In any other case, just return the state\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","productListReducer","state","products","action","type","loading","payload","pages","page","error","productDetailsReducer","product","reviews","productDeleteReducer","success","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer"],"sources":["C:/fyp-final-project/fyp-react-complete-ecommerce/frontend/src/reducers/productReducers.js"],"sourcesContent":["import {\r\n\tPRODUCT_LIST_REQUEST,\r\n\tPRODUCT_LIST_SUCCESS,\r\n\tPRODUCT_LIST_FAIL,\r\n\tPRODUCT_DETAILS_REQUEST,\r\n\tPRODUCT_DETAILS_SUCCESS,\r\n\tPRODUCT_DETAILS_FAIL,\r\n\tPRODUCT_DELETE_REQUEST,\r\n\tPRODUCT_DELETE_SUCCESS,\r\n\tPRODUCT_DELETE_FAIL,\r\n\tPRODUCT_CREATE_REQUEST,\r\n\tPRODUCT_CREATE_SUCCESS,\r\n\tPRODUCT_CREATE_FAIL,\r\n\tPRODUCT_CREATE_RESET,\r\n\tPRODUCT_UPDATE_REQUEST,\r\n\tPRODUCT_UPDATE_SUCCESS,\r\n\tPRODUCT_UPDATE_FAIL,\r\n\tPRODUCT_UPDATE_RESET,\r\n\tPRODUCT_CREATE_REVIEW_REQUEST,\r\n\tPRODUCT_CREATE_REVIEW_SUCCESS,\r\n\tPRODUCT_CREATE_REVIEW_FAIL,\r\n\tPRODUCT_CREATE_REVIEW_RESET,\r\n\tPRODUCT_TOP_REQUEST,\r\n\tPRODUCT_TOP_SUCCESS,\r\n\tPRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n// productListReducer for all products\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// Requests product list\r\n\t\t// products is an empty array because its still loading\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase PRODUCT_LIST_REQUEST:\r\n\t\t\treturn { loading: true, products: [] }\r\n\r\n\t\t// On success\r\n\t\t// products will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_LIST_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tproducts: action.payload.products,\r\n\t\t\t\tpages: action.payload.pages,\r\n\t\t\t\tpage: action.payload.page,\r\n\t\t\t}\r\n\r\n\t\t// On fail\r\n\t\t// products will contain the error as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_LIST_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// productDetailsReducer for a single product\r\nexport const productDetailsReducer = (\r\n\tstate = { product: { reviews: [] } },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\t// Requests a product\r\n\t\t// product is an empty object because its still loading\r\n\t\t// reviews is an empty array because its still loading\r\n\t\t// loading will NOT be done yet, so true\r\n\t\t// add contents of state using a spread operator (...)\r\n\t\tcase PRODUCT_DETAILS_REQUEST:\r\n\t\t\treturn { loading: true, ...state }\r\n\r\n\t\t// On success\r\n\t\t// product will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_DETAILS_SUCCESS:\r\n\t\t\treturn { loading: false, product: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// product will contain the error as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_DETAILS_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// productDeleteReducer for admin users\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase PRODUCT_DELETE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_DELETE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_DELETE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// productCreateReducer for admin users\r\nexport const productCreateReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase PRODUCT_CREATE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_CREATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, product: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_CREATE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\tcase PRODUCT_CREATE_RESET:\r\n\t\t\treturn {}\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// productUpdateReducer for admin users\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase PRODUCT_UPDATE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_UPDATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, product: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_UPDATE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\tcase PRODUCT_UPDATE_RESET:\r\n\t\t\treturn { product: {} }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// productReviewCreateReducer for logged in users\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase PRODUCT_CREATE_REVIEW_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_CREATE_REVIEW_SUCCESS:\r\n\t\t\treturn { loading: false, success: true }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_CREATE_REVIEW_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\tcase PRODUCT_CREATE_REVIEW_RESET:\r\n\t\t\treturn {}\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// productTopRatedReducer\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase PRODUCT_TOP_REQUEST:\r\n\t\t\treturn { loading: true, products: [] }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_TOP_SUCCESS:\r\n\t\t\treturn { loading: false, products: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase PRODUCT_TOP_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}