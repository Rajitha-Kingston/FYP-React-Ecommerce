{"ast":null,"code":"import _slicedToArray from\"C:/fyp-final-project/fyp-react-complete-ecommerce/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;// useSelector is to grab the cart from the state\nvar cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push('/shipping');}// Default paymentMethod is PayPal but can be changed\nvar _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"sources":["C:/fyp-final-project/fyp-react-complete-ecommerce/frontend/src/screens/PaymentScreen.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\t// useSelector is to grab the cart from the state\r\n\tconst cart = useSelector((state) => state.cart)\r\n\tconst { shippingAddress } = cart\r\n\r\n\tif (!shippingAddress) {\r\n\t\thistory.push('/shipping')\r\n\t}\r\n\r\n\t// Default paymentMethod is PayPal but can be changed\r\n\tconst [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tdispatch(savePaymentMethod(paymentMethod))\r\n\t\thistory.push('/placeorder')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t<CheckoutSteps step1 step2 step3 />\r\n\t\t\t<h1>Payment Method</h1>\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label as='legend'>Select Method</Form.Label>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t{/* Payment methods\r\n                    Add Form.Check with new payment method */}\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\tlabel='PayPal or Credit Card'\r\n\t\t\t\t\t\t\tid='PayPal'\r\n\t\t\t\t\t\t\tname='paymentMethod'\r\n\t\t\t\t\t\t\tvalue='PayPal'\r\n\t\t\t\t\t\t\tchecked\r\n\t\t\t\t\t\t\tonChange={(e) => setPaymentMethod(e.target.value)}\r\n\t\t\t\t\t\t></Form.Check>\r\n\t\t\t\t\t\t{/* <Form.Check\r\n\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\tlabel='Stripe'\r\n\t\t\t\t\t\t\tid='Stripe'\r\n\t\t\t\t\t\t\tname='paymentMethod'\r\n\t\t\t\t\t\t\tvalue='Stripe'\r\n\t\t\t\t\t\t\tonChange={(e) => setPaymentMethod(e.target.value)}\r\n\t\t\t\t\t\t></Form.Check> */}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\tContinue\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</FormContainer>\r\n\t)\r\n}\r\n\r\nexport default PaymentScreen\r\n"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAkC,iBAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,iBAAT,KAAkC,wBAAlC,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACtC;AACA,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CAEA,GAAI,CAACA,eAAL,CAAsB,CACrBH,OAAO,CAACI,IAAR,CAAa,WAAb,EACA,CAED;AACA,cAA0Cd,QAAQ,CAAC,QAAD,CAAlD,wCAAOe,aAAP,eAAsBC,gBAAtB,eAEA,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEA,GAAMc,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC5BA,CAAC,CAACC,cAAF,GACAH,QAAQ,CAACT,iBAAiB,CAACO,aAAD,CAAlB,CAAR,CACAL,OAAO,CAACI,IAAR,CAAa,aAAb,EACA,CAJD,CAMA,mBACC,MAAC,aAAD,yBACC,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADD,cAEC,sCAFD,cAGC,MAAC,IAAD,EAAM,QAAQ,CAAEI,aAAhB,wBACC,MAAC,IAAD,CAAM,KAAN,yBACC,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADD,cAEC,KAAC,GAAD,wBAGC,KAAC,IAAD,CAAM,KAAN,EACC,IAAI,CAAC,OADN,CAEC,KAAK,CAAC,uBAFP,CAGC,EAAE,CAAC,QAHJ,CAIC,IAAI,CAAC,eAJN,CAKC,KAAK,CAAC,QALP,CAMC,OAAO,KANR,CAOC,QAAQ,CAAE,kBAACC,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EAPX,EAHD,EAFD,GADD,cAyBC,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBAzBD,GAHD,GADD,CAmCA,CAvDD,CAyDA,cAAeb,CAAAA,aAAf"},"metadata":{},"sourceType":"module"}