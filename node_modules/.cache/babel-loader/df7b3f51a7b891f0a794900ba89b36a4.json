{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userUpdate: userUpdateReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderDeliver: orderDeliverReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  orderList: orderListReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer\n}); // Get cartItems from local storage\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []; // Get userInfo from local storage\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null; // Get shippingAddress from local storage\n\nconst shipppingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}; // Get paymentMethod from local storage\n\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {}; // Create initial state\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shipppingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n}; // Set middleware to thunk middleware\n\nconst middleware = [thunk]; // Create store\n// Pass initial state to load things at that point\n// Setup redux-devtools-extension\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userUpdate","userDelete","orderCreate","orderDetails","orderPay","orderListMy","orderDeliver","productDelete","productCreate","productUpdate","orderList","productReviewCreate","productTopRated","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shipppingAddressFromStorage","paymentMethodFromStorage","initialState","cartItems","shippingAddress","paymentMethod","userInfo","middleware","store"],"sources":["C:/fyp-final-project/fyp-react-complete-ecommerce/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n\tproductListReducer,\r\n\tproductDetailsReducer,\r\n\tproductDeleteReducer,\r\n\tproductCreateReducer,\r\n\tproductUpdateReducer,\r\n\tproductReviewCreateReducer,\r\n\tproductTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n\tuserLoginReducer,\r\n\tuserRegisterReducer,\r\n\tuserDetailsReducer,\r\n\tuserUpdateProfileReducer,\r\n\tuserListReducer,\r\n\tuserDeleteReducer,\r\n\tuserUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n\torderCreateReducer,\r\n\torderDetailsReducer,\r\n\torderPayReducer,\r\n\torderListMyReducer,\r\n\torderListReducer,\r\n\torderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n\tproductList: productListReducer,\r\n\tproductDetails: productDetailsReducer,\r\n\tcart: cartReducer,\r\n\tuserLogin: userLoginReducer,\r\n\tuserRegister: userRegisterReducer,\r\n\tuserDetails: userDetailsReducer,\r\n\tuserUpdateProfile: userUpdateProfileReducer,\r\n\tuserList: userListReducer,\r\n\tuserUpdate: userUpdateReducer,\r\n\tuserDelete: userDeleteReducer,\r\n\torderCreate: orderCreateReducer,\r\n\torderDetails: orderDetailsReducer,\r\n\torderPay: orderPayReducer,\r\n\torderListMy: orderListMyReducer,\r\n\torderDeliver: orderDeliverReducer,\r\n\tproductDelete: productDeleteReducer,\r\n\tproductCreate: productCreateReducer,\r\n\tproductUpdate: productUpdateReducer,\r\n\torderList: orderListReducer,\r\n\tproductReviewCreate: productReviewCreateReducer,\r\n\tproductTopRated: productTopRatedReducer,\r\n})\r\n\r\n// Get cartItems from local storage\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n\t? JSON.parse(localStorage.getItem('cartItems'))\r\n\t: []\r\n// Get userInfo from local storage\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n\t? JSON.parse(localStorage.getItem('userInfo'))\r\n\t: null\r\n// Get shippingAddress from local storage\r\nconst shipppingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n\t? JSON.parse(localStorage.getItem('shippingAddress'))\r\n\t: {}\r\n// Get paymentMethod from local storage\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\r\n\t? JSON.parse(localStorage.getItem('paymentMethod'))\r\n\t: {}\r\n\r\n// Create initial state\r\nconst initialState = {\r\n\tcart: {\r\n\t\tcartItems: cartItemsFromStorage,\r\n\t\tshippingAddress: shipppingAddressFromStorage,\r\n\t\tpaymentMethod: paymentMethodFromStorage,\r\n\t},\r\n\tuserLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\n// Set middleware to thunk middleware\r\nconst middleware = [thunk]\r\n\r\n// Create store\r\n// Pass initial state to load things at that point\r\n// Setup redux-devtools-extension\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACCC,kBADD,EAECC,qBAFD,EAGCC,oBAHD,EAICC,oBAJD,EAKCC,oBALD,EAMCC,0BAND,EAOCC,sBAPD,QAQO,4BARP;AASA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACCC,gBADD,EAECC,mBAFD,EAGCC,kBAHD,EAICC,wBAJD,EAKCC,eALD,EAMCC,iBAND,EAOCC,iBAPD,QAQO,yBARP;AASA,SACCC,kBADD,EAECC,mBAFD,EAGCC,eAHD,EAICC,kBAJD,EAKCC,gBALD,EAMCC,mBAND,QAOO,0BAPP;AASA,MAAMC,OAAO,GAAGzB,eAAe,CAAC;EAC/B0B,WAAW,EAAEtB,kBADkB;EAE/BuB,cAAc,EAAEtB,qBAFe;EAG/BuB,IAAI,EAAEjB,WAHyB;EAI/BkB,SAAS,EAAEjB,gBAJoB;EAK/BkB,YAAY,EAAEjB,mBALiB;EAM/BkB,WAAW,EAAEjB,kBANkB;EAO/BkB,iBAAiB,EAAEjB,wBAPY;EAQ/BkB,QAAQ,EAAEjB,eARqB;EAS/BkB,UAAU,EAAEhB,iBATmB;EAU/BiB,UAAU,EAAElB,iBAVmB;EAW/BmB,WAAW,EAAEjB,kBAXkB;EAY/BkB,YAAY,EAAEjB,mBAZiB;EAa/BkB,QAAQ,EAAEjB,eAbqB;EAc/BkB,WAAW,EAAEjB,kBAdkB;EAe/BkB,YAAY,EAAEhB,mBAfiB;EAgB/BiB,aAAa,EAAEnC,oBAhBgB;EAiB/BoC,aAAa,EAAEnC,oBAjBgB;EAkB/BoC,aAAa,EAAEnC,oBAlBgB;EAmB/BoC,SAAS,EAAErB,gBAnBoB;EAoB/BsB,mBAAmB,EAAEpC,0BApBU;EAqB/BqC,eAAe,EAAEpC;AArBc,CAAD,CAA/B,C,CAwBA;;AACA,MAAMqC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD0B,GAE1B,EAFH,C,CAGA;;AACA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,GAEzB,IAFH,C,CAGA;;AACA,MAAMI,2BAA2B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFH,C,CAGA;;AACA,MAAMK,wBAAwB,GAAGN,YAAY,CAACC,OAAb,CAAqB,eAArB,IAC9BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAD8B,GAE9B,EAFH,C,CAIA;;AACA,MAAMM,YAAY,GAAG;EACpB3B,IAAI,EAAE;IACL4B,SAAS,EAAET,oBADN;IAELU,eAAe,EAAEJ,2BAFZ;IAGLK,aAAa,EAAEJ;EAHV,CADc;EAMpBzB,SAAS,EAAE;IAAE8B,QAAQ,EAAEP;EAAZ;AANS,CAArB,C,CASA;;AACA,MAAMQ,UAAU,GAAG,CAAC1D,KAAD,CAAnB,C,CAEA;AACA;AACA;;AACA,MAAM2D,KAAK,GAAG9D,WAAW,CACxB0B,OADwB,EAExB8B,YAFwB,EAGxBpD,mBAAmB,CAACF,eAAe,CAAC,GAAG2D,UAAJ,CAAhB,CAHK,CAAzB;AAMA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}